parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"Uxrm":[function(require,module,exports) {
"use strict";function n(){var n=1/120,e=0,t=0,u=0,i=null,o=function(){},r=function(){};function c(a){if(null!==e)for(t+=(a-e)/1e3;t>n;)o(n,u),u++,t-=n;e=a,r(),i=requestAnimationFrame(c)}return{render:function(n){r=n},update:function(n){o=n},setUpdateFrequency:function(e){n=1/e},start:function(){e=null,i=requestAnimationFrame(c)},stop:function(){cancelAnimationFrame(i)}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=n;
},{}],"K0P0":[function(require,module,exports) {
"use strict";function e(e,t,r,n){return Math.sqrt(Math.pow(r-e,2)+Math.pow(n-t,2))}function t(e,t,r,n){var o=Math.hypot(r-e,n-t);return{x:(r-e)/o,y:(n-t)/o}}function r(e,t,r,n,o,a,i){var s=Math.pow(1-i,2),u=2*(1-i)*i,p=i*i;return{x:s*e+u*r+p*o,y:s*t+u*n+p*a}}function n(e,t,r){var n=document.createElement(t);return void 0!==r&&(n.className=r),e.appendChild(n),n}Object.defineProperty(exports,"__esModule",{value:!0}),exports.distance=e,exports.normalize=t,exports.quadraticBezier=r,exports.insertElement=n;
},{}],"+kI1":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=e;var t=require("./utilities");function e(e,n){var o=document.createElement("canvas");e.appendChild(o);var i=o.getContext("2d");console.log(e.clientWidth,e.clientHeight),window.addEventListener("resize",y),y();var r=o.width/2,a=o.height/2,s=1,l=0,u=0,c=0,f=0,d={offsetX:o.width/2,offsetY:o.height/2,scale:1,X:function(t){return t*d.scale+d.offsetX},Y:function(t){return t*d.scale+d.offsetY},R:function(t){return t*d.scale}};function y(){o.width=e.clientWidth,o.height=e.clientHeight}function h(t,e,n){return Math.hypot(t-l,e-u)<=n}function x(t,e,o){for(var i=[],r=0;r<o;r++)i.push({x:t+Math.cos(2*Math.PI/o*r)*n.tools.radius,y:e+Math.sin(2*Math.PI/o*r)*n.tools.radius});return i}function p(e,n,o,i,r){r&&o.push({x:l,y:u});var a=o.length,s=o.reduce(function(t,e){return{x:(t.x+e.x)/(a+1),y:(t.y+e.y)/(a+1)}},{x:e/(a+1),y:n/(a+1)});return o.map(function(o){var r=(e+o.x+s.x)/3,a=(n+o.y+s.y)/3,l=(0,t.quadraticBezier)(e,n,r,a,o.x,o.y,.5);return{x:o.x,y:o.y,ctrlX:r,ctrlY:a,buttonX:l.x,buttonY:l.y,actionPotentialPositions:i.map(function(i){return(0,t.quadraticBezier)(e,n,r,a,o.x,o.y,i)})}})}return{onMousePressed:function(t){o.addEventListener("mousedown",function(){t({x:l,y:u,px:c,py:f})})},onMouseReleased:function(t){o.addEventListener("mouseup",function(){t({x:l,y:u,px:c,py:f})})},onMouseMove:function(t){o.addEventListener("mousemove",function(e){c=l,f=u;var n=o.getBoundingClientRect();l=e.pageX-n.left-r,u=e.pageY-n.top-a,t({x:l,y:u,px:c,py:f})})},getOffsetX:function(){return r},getOffsetY:function(){return a},setOffsetX:function(t){r=t},setOffsetY:function(t){a=t},mouseOverNeuron:function(t,e){return h(t,e,n.neuron.radius)},mouseOverTools:function(t,e,o){return x(t,e,o).reduce(function(t,e,o){return h(e.x,e.y,n.tools.buttonRadius)?o:t},void 0)},mouseOverSynapseButtons:function(t,e,o){return p(t,e,o,[],!1).reduce(function(t,e,o){return h(e.buttonX,e.buttonY,n.synapse.buttonRadius)?o:t},void 0)},clearCanvas:function(){i.fillStyle=n.color.background,i.fillRect(0,0,o.width,o.height)},drawNeuron:function(t,e,o,l,u){i.fillStyle=u?n.color.adjusting:o?n.color.inhibitory:n.color.excitatory,i.beginPath(),i.arc(t*s+r,e*s+a,n.neuron.radius*s,0,2*Math.PI),i.fill(),i.strokeStyle=n.color.background,i.beginPath(),i.lineWidth=3*d.scale,i.arc(t*s+r,e*s+a,.618*n.neuron.radius*s,0,2*Math.PI),i.stroke(),i.lineWidth=1,i.fillStyle=n.color.tooling,i.textAlign="center",i.fillText(l.toPrecision(3)+"mV",t*s+r,(e-1.1*n.neuron.radius)*s+a),i.textAlign="start"},drawSynapseCluster:function(e,o,l,u,c,f,d){p(e,o,l,c,f).forEach(function(l){var c,f,y,h,x,p,g,v,b,P,R;c=e,f=o,y=l.ctrlX,h=l.ctrlY,x=l.x,p=l.y,g=u?n.color.inhibitory:n.color.excitatory,v=(0,t.normalize)(c,f,y,h),b=(0,t.normalize)(y,h,x,p),P=(0,t.normalize)(c,f,x,p),R=(n.synapse.startRadius+n.synapse.stopRadius)/2,i.beginPath(),i.moveTo((c+v.y*n.synapse.startRadius)*s+r,(f-v.x*n.synapse.startRadius)*s+a),i.quadraticCurveTo((y+P.y*R)*s+r,(h-P.x*R)*s+a,(x+b.y*n.synapse.stopRadius)*s+r,(p-b.x*n.synapse.stopRadius)*s+a),i.lineTo((x-b.y*n.synapse.stopRadius)*s+r,(p+b.x*n.synapse.stopRadius)*s+a),i.quadraticCurveTo((y-P.y*R)*s+r,(h+P.x*R)*s+a,(c-v.y*n.synapse.startRadius)*s+r,(f+v.x*n.synapse.startRadius)*s+a),i.closePath(),i.fillStyle=g,i.fill(),i.fillStyle=n.color.actionPotential,l.actionPotentialPositions.forEach(function(t){i.beginPath(),i.arc(t.x*s+r,t.y*s+a,n.synapse.actionPotentialRadius,0,2*Math.PI),i.fill()}),d&&function(t,e){i.beginPath(),i.arc(t*s+r,e*s+a,n.synapse.buttonRadius,0,2*Math.PI),i.fillStyle=n.color.tooling,i.fill(),i.beginPath();var o=.5*n.synapse.buttonRadius;i.moveTo((t-o)*s+r,(e-o)*s+a),i.lineTo((t+o)*s+r,(e+o)*s+a),i.moveTo((t+o)*s+r,(e-o)*s+a),i.lineTo((t-o)*s+r,(e+o)*s+a),i.strokeStyle=n.color.background,i.stroke()}(l.buttonX,l.buttonY)})},drawTools:function(t,e,o){i.lineWidth=n.tools.lineThickness,i.textAlign="center",i.textBaseline="middle",x(t,e,o.length).forEach(function(t,e){i.beginPath(),i.arc(t.x*s+r,t.y*s+a,n.tools.buttonRadius*s,0,2*Math.PI),i.strokeStyle=n.color.tooling,i.fillStyle=n.color.background,i.fill(),i.stroke(),i.fillStyle=n.color.tooling,i.fillText(o[e],t.x*s+r,t.y*s+a)}),i.lineWidth=1,i.textAlign="left",i.textBaseline="alphabetic"},drawObject:function(t,e,o){i.fillStyle=n.color.tooling,i.textAlign="start",Object.entries(t).forEach(function(t,n){i.fillText(t[0]+": "+t[1],e,o+15*n)})}}}
},{"./utilities":"K0P0"}],"830K":[function(require,module,exports) {
"use strict";function t(){var t={id:0,x:0,y:0,inhibitory:!1,synapses:[],restingPotential:-70,thresholdPotential:-55,afterHyperPolarizationPotential:-80,membraneOnLastStimulus:-70,timeSinceLastStimulus:0,membranePotential:-70,membraneTau:1,dendriteWeight:8,actionPotentialStrength:30,actionPotentials:[],actionPotentialPropagationTime:2,spontaneous:!1,spontaneousRestingFrequency:2,spontaneousFrequencyScale:.1,timeSinceLastSpontaneousFire:0},n=[];function e(t){if(Array.isArray(t))return t.map(function(t){var e=n.find(function(n){return n.id===t});if(void 0===e)throw Error("No neuron with id "+t);return e});if(Number.isInteger(t)){var e=n.find(function(n){return n.id===t});if(void 0===e)throw Error("No neuron with id "+t);return e}throw Error("Invalid id")}function i(t){e(t).actionPotentials.push(0)}function r(t,n){var r=e(t);r.timeSinceLastStimulus=0,r.membranePotential+=n?-r.dendriteWeight:r.dendriteWeight,r.membranePotential>=r.thresholdPotential&&(r.membranePotential=r.afterHyperPolarizationPotential,r.spontaneous||i(r.id)),r.membraneOnLastStimulus=r.membranePotential}return{createNeuron:function(e){void 0===e&&(e={});for(var i=0;n.map(function(t){return t.id}).reduce(function(t,n){return n===i||t},!1);)i++;e.id=i;var r=Object.assign({},t,e);return n=n.concat(r),i},createSynapse:function(t,e){n=n.map(function(n){return n.id===t&&(n.synapses=n.synapses.concat(e)),n})},deleteNeuron:function(t){n=(n=n.filter(function(n){return n.id!==t})).map(function(n){return n.synapses=n.synapses.filter(function(n){return n!==t}),n})},deleteSynapse:function(t,e){n=n.map(function(n){return n.id===t&&(n.synapses=n.synapses.filter(function(t){return t!==e})),n})},get:e,getAll:function(){return n},updateMembranePotentials:function(t){n.forEach(function(n){n.timeSinceLastStimulus+=t,n.timeSinceLastStimulus<=5*n.membraneTau?n.membranePotential=n.restingPotential+(n.membraneOnLastStimulus-n.restingPotential)*Math.exp(-n.timeSinceLastStimulus/n.membraneTau):n.membranePotential=n.restingPotential})},updateSpontaneousActivity:function(t){n.forEach(function(n){if(n.spontaneous){n.timeSinceLastSpontaneousFire+=t;var e=Math.max(0,n.spontaneousRestingFrequency+(n.membranePotential-n.restingPotential)*n.spontaneousFrequencyScale);n.timeSinceLastSpontaneousFire>=1/e&&(n.timeSinceLastSpontaneousFire=0,i(n.id))}})},updateActionPotentials:function(t){n.forEach(function(n){n.actionPotentials=n.actionPotentials.map(function(e){return e+t/n.actionPotentialPropagationTime}).filter(function(t){return!(t>=1&&(n.synapses.forEach(function(t){r(t,n.inhibitory)}),1))})})},generateActionPotential:i,stimulateMembranePotential:r}}function n(t,n,e){for(var i=0;t.reduce(function(t,n){return n===i||t},!1);)i++;var r=Object.assign({},Neuron);return r.id=i,r.x=n,r.y=e,r}function e(t,n){var e=t.find(function(t){return t.id===n});if(void 0===e)throw Error("No neuron with that ID!");return Object.assign({},e)}function i(t,n){return e(t,n.id),t.map(function(t){return t.id===n.id?n:t})}function r(t,n){var i=t.slice(0);if(i.length<2)throw Error("One neuron must remain!");return e(i,n),(i=i.map(function(t){return t.synapses=t.synapses.filter(function(t){return t!==n}),t})).filter(function(t){return t.id!==n})}function a(t,n,r){var a=e(t,n);return e(t,r),a.synapses=a.synapses.concat(r),i(t,a)}function o(t,n,r){var a=t.slice(0),o=e(a,n);return o.synapses=o.synapses.filter(function(t){return t!==r}),i(a,o)}function s(t,n){t.forEach(function(t){t.timeSinceLastStimulus+=n,t.timeSinceLastStimulus<=5*t.membraneTau?t.membranePotential=t.restingPotential+(t.membraneOnLastStimulus-t.restingPotential)*Math.exp(-t.timeSinceLastStimulus/t.membraneTau):t.membranePotential=t.restingPotential;var e=t.actionPotentials.map(function(e){return e+n/t.actionPotentialPropagationTime});t.actionPotentials=e.filter(function(t){return t<1})})}function u(t,n){e(t,n).actionPotentials.push(0)}function c(t){this.membranePotential+=t,this.membranePotential>=this.thresholdPotential&&(this.membranePotential=this.afterHyperPolarizationPotential,this.generateActionPotential()),this.membraneOnLastStimulus=this.membranePotential,this.timeSinceLastStimulus}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=t,exports.createNeuron=n,exports.getNeuron=e,exports.setNeuron=i,exports.deleteNeuron=r,exports.createSynapse=a,exports.deleteSynapse=o,exports.updatePotentials=s,exports.generateActionPotential=u;
},{}],"WS2T":[function(require,module,exports) {
"use strict";function e(e){var t=[],n=document.createElement("div");e.appendChild(n);var d=document.createElement("div");e.appendChild(d);var a=document.createElement("button");function i(){e.style.display="none"}return a.innerText="Oppdater",a.className="submit",d.appendChild(a),i(),{addProperty:function(e,d,a,i,r){var c=document.createElement("div"),l=document.createElement("div");l.innerText=e,c.appendChild(l);var u=document.createElement("input");u.setAttribute("type","number"),u.setAttribute("min",a),u.setAttribute("max",i),u.setAttribute("step",r),c.appendChild(u),n.appendChild(c),t.push({name:d,element:u})},addBooleanProperty:function(e,d){var a=document.createElement("div"),i=document.createElement("div");i.innerText=e,a.appendChild(i);var r=document.createElement("input");r.setAttribute("type","checkbox"),a.appendChild(r),n.appendChild(a),t.push({name:d,element:r})},setValue:function(e,n){var d=t.find(function(t){return t.name===e});if(void 0===d)throw Error("No field called "+e);"checkbox"===d.element.type?d.element.checked=!!n:d.element.value=n},onSubmit:function(e){a.addEventListener("click",function(){e(t.map(function(e){return{name:e.name,value:"checkbox"===e.element.type?e.element.checked:Number(e.element.value)}}))})},show:function(){e.style.display="block"},hide:i}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=e;
},{}],"Nww5":[function(require,module,exports) {
"use strict";function e(e){var t,a={};function s(e){if(!(e in a))throw Error("Invalid tool name");"deactivate"in a[t]&&a[t].deactivate(),a[t].element.classList.remove("selected"),"activate"in a[t=e]&&a[t].activate(),a[t].element.classList.add("selected")}return{addTool:function(i,n){var o=n.activate,c=n.deactivate,l=n.press,r=n.move,d=n.release,v=document.createElement("div");v.classList.add("tool"),0===Object.keys(a).length&&(v.classList.add("selected"),t=i),v.innerText=i,v.addEventListener("click",function(){t!==i&&s(i)}),e.appendChild(v),a[i]={element:v},o&&(a[i].activate=o),c&&(a[i].deactivate=c),l&&(a[i].press=l),r&&(a[i].move=r),d&&(a[i].release=d)},switchTool:s,toolPress:function(e){"press"in a[t]&&a[t].press(e)},toolMove:function(e){"move"in a[t]&&a[t].move(e)},toolRelease:function(e){"release"in a[t]&&a[t].release(e)}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=e;
},{}],"QdeU":[function(require,module,exports) {
"use strict";var e=s(require("./game-timer")),n=s(require("./views")),t=s(require("./models")),o=s(require("./adjustments")),r=i(require("./tool-menu"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function i(e){if(e&&e.__esModule)return e;var n=a();if(n&&n.has(e))return n.get(e);var t={};if(null!=e){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var i=o?Object.getOwnPropertyDescriptor(e,r):null;i&&(i.get||i.set)?Object.defineProperty(t,r,i):t[r]=e[r]}}return t.default=e,n&&n.set(e,t),t}function s(e){return e&&e.__esModule?e:{default:e}}var u=(0,e.default)(),d={hoveringOverNeuron:!1,hoverNeuronID:0,selectingNeuron:!1,selectedNeuronID:0,draggingNeuron:!1,draggingNeuronID:0,creatingSynapse:!1,creatingSynapseAxonID:0,displayingTools:!1,displayingToolsID:0,deletingSynapse:!1,deletingSynapseAxonID:0,draggingView:!1,adjustingNeuron:!1,adjustingNeuronID:0,dragOffsetX:0,dragOffsetY:0,lastWorkspaceX:0,lastWorkspaceY:0},l=document.getElementById("app"),g=(0,n.default)(document.getElementById("workspace"),{color:{excitatory:"#24CC76",inhibitory:"#f94b4a",background:"white",tooling:"#353535",actionPotential:"#F3F1B7",adjusting:"#9a449b"},neuron:{radius:15,adjustRingThickness:2,adjustRingRadius:30},synapse:{startRadius:15,stopRadius:5,buttonRadius:15,actionPotentialRadius:3},tools:{radius:90,buttonRadius:25,lineThickness:1}}),c=(0,r.default)(document.getElementById("tools"));c.addTool("Flytte",{press:function(e){if(d.hoveringOverNeuron){var n=y.get(d.hoverNeuronID);d.dragOffsetX=n.x-e.x,d.dragOffsetY=n.y-e.y,d.draggingNeuron=!0}},move:function(e){if(d.draggingNeuron){var n=y.get(d.selectedNeuronID);n.x=e.x+d.dragOffsetX,n.y=e.y+d.dragOffsetY}},release:function(){d.draggingNeuron=!1}}),c.addTool("Lag nevron",{press:function(e){y.createNeuron({x:e.x,y:e.y})}}),c.addTool("Lag synapse",{press:function(){d.selectingNeuron&&(d.creatingSynapse=!0,d.creatingSynapseAxonID=d.selectedNeuronID)},release:function(){d.creatingSynapse&&(d.hoveringOverNeuron&&d.hoverNeuronID!==d.creatingSynapseAxonID&&y.createSynapse(d.creatingSynapseAxonID,d.hoverNeuronID),d.creatingSynapse=!1)}}),c.addTool("Fjern nevron",{press:function(){d.hoveringOverNeuron&&y.deleteNeuron(d.hoverNeuronID)}}),c.addTool("Fjern synapse",{activate:function(){d.deletingSynapse=!0},deactivate:function(){d.deletingSynapse=!1},press:function(){y.getAll().forEach(function(e){var n=g.mouseOverSynapseButtons(e.x,e.y,y.get(e.synapses).map(function(e){return{x:e.x,y:e.y}}));void 0!==n&&y.deleteSynapse(e.id,e.synapses[n])})}}),c.addTool("Aksjonspotensial",{press:function(){d.hoveringOverNeuron&&y.generateActionPotential(d.hoverNeuronID)}}),c.addTool("Konfigurer",{deactivate:function(){d.adjustingNeuron=!1,p.hide()},press:function(){if(d.selectingNeuron){d.adjustingNeuron=!0,d.adjustingNeuronID=d.selectedNeuronID,p.show();var e=y.get(d.adjustingNeuronID);p.setValue("restingPotential",e.restingPotential),p.setValue("thresholdPotential",e.thresholdPotential),p.setValue("afterHyperPolarizationPotential",e.afterHyperPolarizationPotential),p.setValue("membraneTau",e.membraneTau),p.setValue("dendriteWeight",e.dendriteWeight),p.setValue("spontaneousRestingFrequency",e.spontaneousRestingFrequency),p.setValue("spontaneousFrequencyScale",e.spontaneousFrequencyScale),p.setValue("inhibitory",e.inhibitory),p.setValue("spontaneous",e.spontaneous)}else d.adjustingNeuron=!1,p.hide()}});var p=(0,o.default)(document.getElementById("adjustments"));p.addProperty("Hvilepotensiale","restingPotential",-100,0,1),p.addProperty("Terskelpotensiale","thresholdPotential",-100,100,1),p.addProperty("AHP-potensiale","afterHyperPolarizationPotential",-200,0,1),p.addProperty("Membranets tidskonstant","membraneTau",.1,10,.1),p.addProperty("Synaptisk vekting","dendriteWeight",0,100,1),p.addProperty("Hvilefrekvens","spontaneousRestingFrequency",0,10,.1),p.addProperty("Frekvensskalering (Hz pr. mV)","spontaneousFrequencyScale",0,1,.01),p.addBooleanProperty("Hemmende","inhibitory"),p.addBooleanProperty("Spontanaktivitet","spontaneous");var y=(0,t.default)();y.createNeuron({x:0,y:0}),g.onMouseMove(function(e){var n=y.getAll().find(function(e){return g.mouseOverNeuron(e.x,e.y)});void 0!==n?(d.hoveringOverNeuron=!0,d.hoverNeuronID=n.id):d.hoveringOverNeuron=!1,c.toolMove(e)}),g.onMousePressed(function(e){d.selectingNeuron=!1,d.hoveringOverNeuron&&(d.selectingNeuron=!0,d.selectedNeuronID=d.hoverNeuronID),c.toolPress(e)}),g.onMouseReleased(function(e){c.toolRelease(e)}),p.onSubmit(function(e){if(y.getAll().length>0){var n=y.get(d.adjustingNeuronID);e.forEach(function(e){return n[e.name]=e.value})}}),u.update(function(e){y.updateMembranePotentials(e),y.updateSpontaneousActivity(e),y.updateActionPotentials(e)}),u.render(function(){if(g.clearCanvas(),y.getAll().forEach(function(e){g.drawSynapseCluster(e.x,e.y,y.get(e.synapses).map(function(e){return{x:e.x,y:e.y}}),e.inhibitory,e.actionPotentials,d.creatingSynapse&&d.creatingSynapseAxonID===e.id,d.deletingSynapse)}),y.getAll().forEach(function(e){g.drawNeuron(e.x,e.y,e.inhibitory,e.membranePotential,d.adjustingNeuron&&d.adjustingNeuronID===e.id)}),d.displayingTools){var e=y.get(d.displayingToolsID);g.drawTools(e.x,e.y,tools.map(function(e){return e.name}))}g.drawObject(d,10,10)}),u.start();
},{"./game-timer":"Uxrm","./views":"+kI1","./models":"830K","./adjustments":"WS2T","./tool-menu":"Nww5"}]},{},["QdeU"], null)